[
    "class Main(Scene):\n    def construct(self):\n            text = Text(\"Animations\").shift(UP*2.5)\n            self.play(Write(text))\n            self.wait(1)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Create\").shift(UP*2.5)), run_time=0.5)\n            start = Star()\n            self.play(Create(start))\n            self.play(Transform(text,Text(\"Uncreate\").shift(UP*2.5)), run_time=0.5)\n            self.play(Uncreate(start))",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"AnimatedBoundary\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle()\n            animated_boundary = AnimatedBoundary(circle, cycle_rate=3, colors=[RED, GREEN, BLUE])\n            self.add(circle, animated_boundary)\n            self.wait(2)\n            self.remove(circle, animated_boundary)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"TracedPath\").shift(UP*2.5)), run_time=0.5)\n            dot = Dot(color=RED)\n            trace = TracedPath(dot.get_center)\n            self.add(dot, trace)\n            self.wait(0.5)\n            self.play(dot.animate.shift(UP), run_time=0.5)\n            self.play(dot.animate.shift(LEFT), run_time=0.5)\n            self.play(dot.animate.shift(DOWN+RIGHT), run_time=0.5)\n            self.remove(dot, trace)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"AddTextLetterByLetter\").shift(UP*2.5)), run_time=0.5)\n            some_text = Text(\"Here is a text\")\n            self.play(AddTextLetterByLetter(some_text))\n            self.play(Transform(text,Text(\"RemoveTextLetterByLetter\").shift(UP*2.5)), run_time=0.5)\n            self.play(RemoveTextLetterByLetter(some_text))",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Write\").shift(UP*2.5)), run_time=0.5)\n            some_text = Text(\"Here is more text\")\n            self.play(Write(some_text))\n            self.play(Transform(text,Text(\"Unwrite\").shift(UP*2.5)), run_time=0.5)\n            self.play(Unwrite(some_text))\n            self.remove(some_text)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"DrawBorderThenFill\").shift(UP*2.5)), run_time=0.5)\n            square = Square(color=BLUE, fill_opacity=1).set_fill(YELLOW)\n            self.play(DrawBorderThenFill(square))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ShowIncreasingSubsets\").shift(UP*2.5)), run_time=0.5)\n            circles = VGroup(\n                Circle().shift(UP*0.5),\n                Circle().shift((DOWN+LEFT)*0.5),\n                Circle().shift((DOWN+RIGHT)*0.5)\n            )\n            self.play(ShowIncreasingSubsets(circles))\n            self.wait()\n            self.remove(circles)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ShowSubmobjectsOneByOne\").shift(UP*2.5)), run_time=0.5)\n            circles2 = VGroup(\n                Circle().shift(UP*0.5),\n                Circle().shift((DOWN+LEFT)*0.5),\n                Circle().shift((DOWN+RIGHT)*0.5)\n            )\n            self.play(ShowSubmobjectsOneByOne(circles2))\n            self.play(Uncreate(circles2))",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"FadeIn\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(FadeIn(square))\n            self.play(Transform(text,Text(\"FadeOut\").shift(UP*2.5)), run_time=0.5)\n            self.play(FadeOut(square))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"GrowArrow\").shift(UP*2.5)), run_time=0.5)\n            arrow = Arrow()\n            self.play(GrowArrow(arrow))\n            self.remove(arrow)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"GrowFromCenter\").shift(UP*2.5)), run_time=0.5)\n            triangle = Triangle()\n            self.play(GrowFromCenter(triangle))\n            self.remove(triangle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"GrowFromEdge - DOWN\").shift(UP*2.5)), run_time=0.5)\n            squares = [Square() for _ in range(4)]\n            self.play(GrowFromEdge(squares[0], DOWN))\n            self.play(Transform(text,Text(\"GrowFromEdge - RIGHT\").shift(UP*2.5)), run_time=0.5)\n            self.play(GrowFromEdge(squares[1], RIGHT))\n            self.play(Transform(text,Text(\"GrowFromEdge - UP\").shift(UP*2.5)), run_time=0.5)\n            self.play(GrowFromEdge(squares[2], UP))\n            self.play(Transform(text,Text(\"GrowFromEdge - LEFT\").shift(UP*2.5)), run_time=0.5)\n            self.play(GrowFromEdge(squares[3], LEFT))\n            self.remove(*squares)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"GrowFromPoint\").shift(UP*2.5)), run_time=0.5)\n            dot = Dot().shift(UP+RIGHT*2)\n            star = Star()\n            self.add(dot)\n            self.wait(0.5)\n            self.play(GrowFromPoint(star, dot))\n            self.remove(dot, star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"SpinInFromNothing\").shift(UP*2.5)), run_time=0.5)\n            triangle = Triangle()\n            self.play(SpinInFromNothing(triangle))\n            self.remove(triangle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ApplyWave\").shift(UP*2.5)), run_time=0.5)\n            some_text = Text(\"Mathematical Animations\")\n            self.play(ApplyWave(some_text))\n            self.play(ApplyWave(some_text, direction=RIGHT))\n            self.remove(some_text)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Circumscribe\").shift(UP*2.5)), run_time=0.5)\n            some_text = Text(\"Look Here\")\n            self.add(some_text)\n            self.play(Circumscribe(some_text))\n            self.play(Circumscribe(some_text, Circle))\n            self.remove(some_text)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Flash\").shift(UP*2.5)), run_time=0.5)\n            some_text = Text(\"Ta Da\").set_color(YELLOW)\n            self.add(some_text)\n            self.play(Flash(some_text))\n            self.remove(some_text)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"FocusOn\").shift(UP*2.5)), run_time=0.5)\n            some_text = Text(\"Here!\")\n            self.add(some_text)\n            self.play(FocusOn(some_text))\n            self.remove(some_text)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Indicate\").shift(UP*2.5)), run_time=0.5)\n            some_text = Text(\"This is important\")\n            self.play(Indicate(some_text))\n            self.remove(some_text)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Wiggle\").shift(UP*2.5)), run_time=0.5)\n            some_text = Text(\"THIS\")\n            self.play(Wiggle(some_text))\n            self.remove(some_text)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ShowPassingFlash\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(ShowPassingFlash(square))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ShowPassingFlashWithThinningStrokeWidth\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(ShowPassingFlashWithThinningStrokeWidth(square))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"MoveAlongPath\").shift(UP*2.5)), run_time=0.5)\n            l1 = Line(LEFT+DOWN, RIGHT+UP)\n            self.add(l1)\n            d1 = Dot().shift(LEFT+DOWN)\n            self.play(Create(d1), run_time=0.5)\n            self.play(MoveAlongPath(d1, l1), rate_func=linear)\n            self.remove(l1,d1)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Rotate\").shift(UP*2.5)), run_time=0.5)\n            star = Star()\n            self.play(Rotate(star))\n            self.wait(0.5)\n            self.remove(star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Rotating\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(Rotating(square))\n            self.wait(0.5)\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Broadcast\").shift(UP*2.5)), run_time=0.5)\n            triangle = Triangle()\n            self.play(Broadcast(triangle))\n            self.remove(triangle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ChangeSpeed\").shift(UP*2.5)), run_time=0.5)\n            d = Dot().shift(LEFT)\n            self.play(ChangeSpeed(d.animate.shift(RIGHT*2), speedinfo={0.3: 1, 0.4: 0.1, 0.6: 0.1, 1: 1}, rate_func=linear))\n            self.remove(d)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Transform\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            star = Star()\n            self.play(Transform(square,star))\n            self.remove(square,star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ClockwiseTransform\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            star = Star()\n            self.play(ClockwiseTransform(square,star))\n            self.remove(square,star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"CounterclockwiseTransform\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            star = Star()\n            self.play(CounterclockwiseTransform(square,star))\n            self.remove(square,star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"CyclicReplace\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            star = Star()\n            circle = Circle()\n            triangle = Triangle()\n            vg = VGroup(square,star,circle,triangle)\n            vg.arrange(RIGHT)\n            self.play(CyclicReplace(*vg))\n            self.wait()\n            self.remove(square,star,circle,triangle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"FadeToColor\").shift(UP*2.5)), run_time=0.5)\n            square = Square(fill_opacity=1).set_fill(RED)\n            self.play(FadeToColor(square,color=YELLOW))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"FadeTransform\").shift(UP*2.5)), run_time=0.5)\n            square = Square(fill_opacity=1).set_fill(BLUE)\n            star = Star(fill_opacity=1).set_fill(YELLOW)\n            self.play(FadeTransform(square,star))\n            self.remove(square,star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"MoveToTarget\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle().shift(LEFT)\n            circle.generate_target()\n            circle.move_to(RIGHT)\n            self.play(MoveToTarget(circle))\n            self.remove(circle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ReplacementTransform\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle().shift(LEFT)\n            square = Square().shift(RIGHT)\n            self.play(ReplacementTransform(circle,square))\n            self.remove(circle,square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"Restore\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle()\n            square = Square(fill_opacity=1).set_fill(RED).shift(DOWN+RIGHT)\n            self.play(Create(circle), run_time=0.5)\n            circle.save_state()\n            self.wait(0.5)\n            self.play(Transform(circle,square), run_time=0.3)\n            self.play(circle.animate.shift(RIGHT), run_time=0.3)\n            self.play(circle.animate.rotate(0.5), run_time=0.4)\n            self.wait(0.5)\n            self.play(Restore(circle))\n            self.wait(0.2)\n            self.remove(circle,square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ScaleInPlace\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(ScaleInPlace(square, scale_factor=2))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"ShrinkToCenter\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(ShrinkToCenter(square))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"TransformMatchingShapes\").shift(UP*2.5)), run_time=0.5)\n            source_text = Text(\"tom marvolo riddle\")\n            dest_text = Text(\"lord voldemort\")\n            self.play(Write(source_text))\n            self.wait(0.5)\n            self.play(TransformMatchingShapes(source_text, dest_text, path_arc=PI/2))\n            self.wait(0.5)\n            self.remove(source_text,dest_text)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"TransformMatchingTex\").shift(UP*2.5)), run_time=0.5)\n            eq1 = MathTex(\"{{a}}^2\", \"+\", \"{{b}}^2\", \"=\", \"{{c}}^2\")\n            eq2 = MathTex(\"{{a}}^2\", \"+\", \"-{{c}}^2\", \"=\", \"-{{b}}^2\")\n            self.add(eq1)\n            self.wait(0.5)\n            self.play(TransformMatchingTex(eq1, eq2, path_arc=PI/2))\n            self.wait(0.5)\n            self.remove(eq1,eq2)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.shift\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle()\n            self.play(circle.animate.shift(UP), run_time=0.5)\n            self.play(circle.animate.shift(DOWN), run_time=0.5)\n            self.play(circle.animate.shift(LEFT), run_time=0.5)\n            self.play(circle.animate.shift(RIGHT), run_time=0.5)\n            self.remove(circle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.set_fill\").shift(UP*2.5)), run_time=0.5)\n            square = Square(fill_opacity=1)\n            self.play(square.animate.set_fill(RED))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.rotate\").shift(UP*2.5)), run_time=0.5)\n            triangle = Triangle(fill_opacity=1)\n            self.play(triangle.animate.rotate(PI))\n            self.remove(triangle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.scale\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.scale(scale_factor=1.5))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.rotate_about_origin\").shift(UP*2.5)), run_time=0.5)\n            star = Star().shift(RIGHT*2)\n            self.play(star.animate.rotate_about_origin(PI))\n            self.remove(star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.rotate\").shift(UP*2.5)), run_time=0.5)\n            triangle = Triangle()\n            self.play(triangle.animate.rotate(PI))\n            self.remove(triangle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.flip\").shift(UP*2.5)), run_time=0.5)\n            triangle = Triangle()\n            self.play(triangle.animate.flip())\n            self.remove(triangle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.stretch\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle()\n            self.play(circle.animate.stretch(2,1))\n            self.remove(circle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.wag\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.wag())\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.pose_at_angle\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.pose_at_angle())\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.center\").shift(UP*2.5)), run_time=0.5)\n            square = Square().shift(LEFT*2)\n            self.play(square.animate.center())\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.align_on_border\").shift(UP*2.5)), run_time=0.5)\n            square = Square().shift(LEFT*2)\n            self.play(square.animate.align_on_border(direction=np.array([0,1,0])))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.to_corner\").shift(UP*2.5)), run_time=0.5)\n            square = Square().shift(LEFT*2)\n            self.play(square.animate.to_corner())\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.to_edge\").shift(UP*2.5)), run_time=0.5)\n            square = Square().shift(LEFT*2)\n            self.play(square.animate.to_edge())\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.next_to\").shift(UP*2.5)), run_time=0.5)\n            dot = Dot().shift((RIGHT+UP)*2)\n            square = Square().shift(LEFT*2)\n            self.add(dot)\n            self.play(square.animate.next_to(dot))\n            self.remove(square,dot)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.scale_to_fit_width\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.scale_to_fit_width(5))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.stretch_to_fit_width\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.stretch_to_fit_width(5))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.scale_to_fit_height\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.scale_to_fit_height(3))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.stretch_to_fit_height\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.stretch_to_fit_height(3))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.set_coord\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.set_coord(-1,0))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.set_x\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.set_x(-1))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.set_y\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.play(square.animate.set_y(-1))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.space_out_submobjects\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle()\n            star = Star()\n            circle.add(star)\n            self.play(circle.animate.space_out_submobjects(factor=2))\n            self.remove(circle,star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.move_to\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle()\n            self.play(circle.animate.move_to(RIGHT+UP))\n            self.remove(circle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.replace\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle().shift(LEFT)\n            star = Star().shift(RIGHT)\n            self.add(circle, star)\n            self.play(circle.animate.replace(star))\n            self.remove(circle,star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.surround\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle().shift(LEFT)\n            star = Star().shift(RIGHT)\n            self.add(circle,star)\n            self.play(circle.animate.surround(star))\n            self.remove(circle,star)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.add_background_rectangle\").shift(UP*2.5)), run_time=0.5)\n            square = Square()\n            self.add(square)\n            self.play(square.animate.add_background_rectangle())\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.set_color\").shift(UP*2.5)), run_time=0.5)\n            square = Square(fill_opacity=1)\n            self.add(square)\n            self.play(square.animate.set_color(BLUE))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.set_color_by_gradient\").shift(UP*2.5)), run_time=0.5)\n            square = Square(fill_opacity=1)\n            self.add(square)\n            self.play(square.animate.set_color_by_gradient(RED,BLUE,YELLOW))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.fade_to\").shift(UP*2.5)), run_time=0.5)\n            square = Square(fill_opacity=1).set_fill(RED)\n            self.add(square)\n            self.play(square.animate.fade_to(GREEN, 0.5))\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.fade\").shift(UP*2.5)), run_time=0.5)\n            square = Square(fill_opacity=1).set_fill(RED)\n            self.add(square)\n            self.play(square.animate.fade())\n            self.remove(square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.match_color\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle(fill_opacity=1).set_fill(RED).shift(LEFT*2)\n            square = Square(fill_opacity=1).shift(RIGHT*2)\n            self.add(circle)\n            self.play(Create(square))\n            self.play(square.animate.match_color(circle))\n            self.remove(square,circle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.match_dim_size\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle().scale(2)\n            square = Square()\n            self.add(circle,square)\n            self.play(square.animate.match_dim_size(circle, 0))\n            self.remove(square,circle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.match_width\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle().scale(2)\n            square = Square()\n            self.add(circle,square)\n            self.play(square.animate.match_width(circle))\n            self.remove(square,circle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.match_height\").shift(UP*2.5)), run_time=0.5)\n            circle = Circle().scale(2)\n            square = Square()\n            self.add(circle,square)\n            self.play(square.animate.match_height(circle))\n            self.remove(square,circle)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.match_x\").shift(UP*2.5)), run_time=0.5)\n            dot = Dot().shift((LEFT+UP)*2)\n            star = Star()\n            self.add(dot,star)\n            self.play(star.animate.match_x(dot))\n            self.remove(star,dot)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.match_y\").shift(UP*2.5)), run_time=0.5)\n            dot = Dot().shift((LEFT+UP)*2)\n            star = Star()\n            self.add(dot,star)\n            self.play(star.animate.match_y(dot))\n            self.remove(star,dot)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.arrange\").shift(UP*2.5)), run_time=0.5)\n            t1 = Text(\"3\").shift(LEFT)\n            t2 = Text(\"1\")\n            t3 = Text(\"2\").shift(RIGHT)\n            vg = VGroup(t2,t3,t1)\n            self.add(t2,t3,t1)\n            self.wait(0.5)\n            self.play(vg.animate.arrange(buff=1.0))\n            self.remove(t1,t2,t3)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.arrange_in_grid\").shift(UP*2.5)), run_time=0.5)\n            boxes=VGroup(*[Square().scale(0.5) for s in range(0,6)])\n            boxes.arrange(buff=1.0)\n            self.add(*boxes)\n            self.wait(0.5)\n            self.play(boxes.animate.arrange_in_grid(rows=2, buff=0.5))\n            self.remove(*boxes)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.become\").shift(UP*2.5)), run_time=0.5)\n            circ = Circle(fill_color=RED, fill_opacity=0.8).shift(RIGHT*1.5)\n            square = Square(fill_color=BLUE, fill_opacity=0.2).shift(LEFT*1.5)\n            self.add(circ,square)\n            self.wait(0.5)\n            self.play(circ.animate.become(square))\n            self.remove(circ,square)",
    "class Main(Scene):\n    def construct(self):\n            self.play(Transform(text,Text(\"animate.match_points\").shift(UP*2.5)), run_time=0.5)\n            circ = Circle(fill_color=RED, fill_opacity=0.8).shift(RIGHT*1.5)\n            square = Square(fill_color=BLUE, fill_opacity=0.2).shift(LEFT*1.5)\n            self.add(circ,square)\n            self.wait(0.5)\n            self.play(circ.animate.match_points(square))\n            self.wait(0.5)\n            self.play(FadeOut(circ),FadeOut(square))"
]